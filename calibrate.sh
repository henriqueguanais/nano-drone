#!/bin/bash

# Script para calibra√ß√£o e teste do nano-drone
# Uso: ./calibrate.sh [test_type]

TEST_TYPE=${1:-help}

echo "üöÅ Nano-Drone Calibration & Test"
echo "================================"

case $TEST_TYPE in
    imu)
        echo "üìä Teste IMU - Posicionamento e Leitura"
        echo "======================================="
        echo ""
        echo "Instru√ß√µes:"
        echo "1. Posicione o drone em superf√≠cie plana"
        echo "2. Aguarde estabiliza√ß√£o (2-3 segundos)"
        echo "3. Observe os valores de Roll/Pitch (devem estar pr√≥ximos de 0¬∞)"
        echo "4. Mova suavemente para testar resposta"
        echo ""
        echo "Valores esperados:"
        echo "  Roll: -5¬∞ a +5¬∞"
        echo "  Pitch: -5¬∞ a +5¬∞"
        echo "  YawRate: vari√°vel conforme movimento"
        echo ""
        echo "Pressione ENTER para iniciar monitoramento..."
        read
        ./monitor.sh
        ;;
    
    rc)
        echo "üì° Teste RC - Receptor PPM"
        echo "=========================="
        echo ""
        echo "Instru√ß√µes:"
        echo "1. Ligue o transmissor RC"
        echo "2. Verifique se receptor est√° conectado em PD2"
        echo "3. Mova sticks e observe valores mudarem"
        echo "4. Teste switch de armamento"
        echo ""
        echo "Valores esperados:"
        echo "  CH1 (Roll): 1000-2000 ¬µs"
        echo "  CH2 (Pitch): 1000-2000 ¬µs"
        echo "  CH3 (Throttle): 1000-2000 ¬µs"
        echo "  CH4 (Yaw): 1000-2000 ¬µs"
        echo "  CH5 (Arm): 1000 (desarm) / 2000 (arm)"
        echo ""
        echo "Pressione ENTER para iniciar monitoramento..."
        read
        ./monitor.sh
        ;;
    
    pwm)
        echo "‚ö° Teste PWM - Sinais dos Motores"
        echo "================================"
        echo ""
        echo "‚ö†Ô∏è  ATEN√á√ÉO: Remova h√©lices antes do teste!"
        echo ""
        echo "Instru√ß√µes:"
        echo "1. Conecte oscilosc√≥pio nos pinos PWM:"
        echo "   - Motor 1: PB1 (Pin 9)"
        echo "   - Motor 2: PB2 (Pin 10)"
        echo "   - Motor 3: PB3 (Pin 11)"
        echo "   - Motor 4: PD3 (Pin 3)"
        echo "2. Arme o drone (CH5 = 2000, CH3 = baixo)"
        echo "3. Aumente throttle gradualmente"
        echo "4. Observe frequ√™ncias:"
        echo "   - Motores 1&2: 50Hz"
        echo "   - Motores 3&4: ~61Hz"
        echo ""
        echo "Valores esperados:"
        echo "  M√≠nimo: 1000¬µs (1ms)"
        echo "  M√°ximo: 2000¬µs (2ms)"
        echo "  Per√≠odo: 20ms (50Hz) ou 16.4ms (61Hz)"
        echo ""
        echo "Pressione ENTER para continuar..."
        read
        ;;
    
    pid)
        echo "üéØ Teste PID - Sistema de Controle"
        echo "=================================="
        echo ""
        echo "‚ö†Ô∏è  ATEN√á√ÉO: Teste com drone fixo em suporte!"
        echo ""
        echo "Instru√ß√µes:"
        echo "1. Fixe drone em suporte que permita movimento"
        echo "2. Arme o sistema (CH5 = 2000, CH3 = baixo)"
        echo "3. Aumente throttle para ~40%"
        echo "4. Mova drone manualmente e observe corre√ß√£o"
        echo "5. Teste comandos de stick suaves"
        echo ""
        echo "Comportamento esperado:"
        echo "  - Drone tenta manter posi√ß√£o quando perturbado"
        echo "  - Resposta suave aos comandos de stick"
        echo "  - Motores n√£o oscilam excessivamente"
        echo ""
        echo "Ajuste de ganhos (flight_config.h):"
        echo "  - Se oscila: diminua Kp"
        echo "  - Se lento: aumente Kp"
        echo "  - Se deriva: ajuste Ki"
        echo "  - Se inst√°vel: ajuste Kd"
        echo ""
        echo "Pressione ENTER para continuar..."
        read
        ;;
    
    config)
        echo "‚öôÔ∏è  Configura√ß√£o R√°pida"
        echo "======================"
        echo ""
        echo "Configura√ß√µes dispon√≠veis:"
        echo "1. conservative - Ganhos baixos, resposta suave"
        echo "2. aggressive - Ganhos altos, resposta r√°pida"
        echo "3. smooth - Ganhos m√©dios, voo est√°vel"
        echo "4. debug - Habilitado debug serial"
        echo ""
        echo "Qual configura√ß√£o usar?"
        read -p "Escolha (1-4): " choice
        
        case $choice in
            1) ./quick_config.sh conservative ;;
            2) ./quick_config.sh aggressive ;;
            3) ./quick_config.sh smooth ;;
            4) ./quick_config.sh debug ;;
            *) echo "Op√ß√£o inv√°lida!" ;;
        esac
        ;;
    
    help|*)
        echo "Tipos de teste dispon√≠veis:"
        echo ""
        echo "  imu      - Teste do sensor MPU6050"
        echo "  rc       - Teste do receptor RC PPM"
        echo "  pwm      - Teste dos sinais PWM dos motores"
        echo "  pid      - Teste do sistema de controle PID"
        echo "  config   - Configura√ß√£o r√°pida de par√¢metros"
        echo ""
        echo "Exemplos:"
        echo "  ./calibrate.sh imu"
        echo "  ./calibrate.sh rc"
        echo "  ./calibrate.sh pwm"
        echo ""
        ;;
esac
